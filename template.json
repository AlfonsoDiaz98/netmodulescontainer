{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountName": {
            "type": "string",
            "maxLength": 24,
            "minLength": 3,
            "metadata": {
                "description": "Specify the name of the storage Account service."
            }
        },
        "appServicePlanlNameNew": {
            "type": "string",
            "defaultValue": "plan",
            "minLength": 2,
            "metadata": {
                "description": "app service plan name."
            }
        },
        "webAppName": {
            "type": "string",
            "defaultValue": "",
            "minLength": 2,
            "metadata": {
                "description": "Web app name."
            }
        }
    },
    "variables": {
        "storageAccountName": "[parameters('storageAccountName')]",
        "storageContainerName": "defaults",

        "locationGroup": "[resourceGroup().location]",
        "webAppName": "[concat('webApp-',parameters('webAppName'))]",
        "appServicePlanPortalName": "[parameters('appServicePlanlNameNew')]",
        "serverFarmIdNew": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]",
        "serverFarmId": "[variables('serverFarmIdNew')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-08-01",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage"
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-09-01",
            "name": "[format('{0}/default/{1}', variables('storageAccountName'), variables('storageContainerName'))]",
            "properties": {
                "publicAccess": "None"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "condition": true,
            "name": "[variables('appServicePlanPortalName')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-03-01",
            "location": "[variables('locationGroup')]",
            "sku": {
                "name": "S1"
            },
            "kind": "linux",
            "properties": {
                "name": "[variables('appServicePlanPortalName')]",
                "workerSize": "0",
                "workerSizeId": "0",
                "numberOfWorkers": "1",
                "reserved": true,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-03-01",
            "name": "[variables('webAppName')]",
            "location": "[variables('locationGroup')]",

            "properties": {
                "name": "[variables('webAppName')]",
                "serverFarmId": "[variables('serverFarmId')]",
                "siteConfig": {

                    "appSettings": [
                        {
                            "name": "AZURE_CLIENT_ID",
                            "value": "c4720ffb-1d3d-4f9e-bec3-66dec1f1da71"
                        },
                        {
                            "name": "AZURE_CLIENT_SECRET",
                            "value": "dP67Q~ReRsexrZ8EtGE02nnB4Lc_kfEiHCSb7"
                        },
                        {
                            "name": "AZURE_TENANT_ID",
                            "value": "02ecab7f-85de-4d13-9c86-db5eefd90ee2"
                        }
                    ],

                    "alwaysOn": false,
                    "httpsOnly": true,
                    "ftpsState": "AllAllowed",
                    "publishingUsername": "smartlinkpublishinguser"
                },
                "clientAffinityEnabled": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]"
            ]
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "ftpScript",
            "location": "[resourceGroup().location]",
            "kind": "AzurePowerShell",
            "properties": {
                "azPowerShellVersion": "7.0.6",
                "forceUpdateTag": "1",
                "arguments": "[format('{0} {1} {2}',reference(resourceId('Microsoft.Web/sites',variables('webAppName'))).ftpsHostName, reference(resourceId('Microsoft.Web/sites/', variables('webAppName'))).name, list(concat('Microsoft.Web/sites/', variables('webAppName') ,'/config/publishingcredentials'), '2021-03-01').properties.publishingPassword)]",
                "scriptContent": "$DeploymentScriptOutputs = @{};$DeploymentScriptOutputs['scriptOutput'] = (Get-Location).Path;$urlFtps = $args[0]; $resourceName = $args[1]; $passFtp = $args[2]; ./main.ps1 $urlFtp $resourceName $passFtp; $DeploymentScriptOutputs['uno'] = $args[0]; $DeploymentScriptOutputs['dos'] = $args[1]; $DeploymentScriptOutputs['tres'] = $args[2]",
                "supportingScriptUris": [
                    "https://raw.githubusercontent.com/AlfonsoDiaz98/netmodulescontainer/master/main.ps1",
                    "https://raw.githubusercontent.com/AlfonsoDiaz98/netmodulescontainer/master/samplefile.txt"
                ],
                "storageAccountSettings": {
                    "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts',  variables('storageAccountName')), '2021-08-01').keys[0].value]",
                    "storageAccountName": "[variables('storageAccountName')]"
                },
                "timeout": "PT30M",
                "cleanupPreference": "OnExpiration",
                "retentionInterval": "P1D"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Web/sites',variables('webAppName'))]"
            ]
         }
    ],
    "outputs": {
        "userFtp": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Web/sites', variables('webAppName'))).ftpUsername]"
        },
        "ftpHost": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Web/sites', variables('webAppName'))).ftpsHostName]"
        },
        "ftpPassword": {
            "type": "string",
            "value": "[list(concat('Microsoft.Web/sites/', variables('webAppName') ,'/config/publishingcredentials'), '2021-03-01').properties.publishingPassword]"
        },
        "referenceObject": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.Web/sites', variables('webAppName')))]"
        },
        "listObject": {
            "type": "object",
            "value": "[list(concat('Microsoft.Web/sites/', variables('webAppName') ,'/config/publishingcredentials'), '2021-03-01')]"
        },
        "scriptOutput": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', 'ftpScript')).outputs.scriptOutput]"
        },
        "uno": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', 'ftpScript')).outputs.uno]"
        },
        "dos": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', 'ftpScript')).outputs.dos]"
        },
        "tres": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', 'ftpScript')).outputs.tres]"
        }
    }
}